// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ConfigIntegration {
  id               String  @id @default(uuid())
  description      String // Tiny API2
  baseUrl          String // https://api.tiny.com.br/api2
  token            String
  params           String // {token: config.token, formato: 'json'} -> &token=''&formato=json
  type             String // REST | SOAP
  requestPerMinute Int
  active           Boolean
}

model ConfigIntegrationAuth {
  id   String @id @default(uuid())
  type String // TOKEN | OAuth2 | etc
}

model ConfigIntegrationEndpoint {
  id         String  @id @default(uuid())
  name       String // Obter Produtos
  endpoint   String // produtos.pesquisa.php
  method     String // GET | POST | DELETE | UPDATE | PATCH
  paginated  Boolean
  parent     Int // Se é filha de outra requisição e deve ser acionada após resposta da requisição pai (se endpoint da filha for o mesmo da pai não será feita chamada ao endpoint novamente)
  bodyFilter String // res.retorno.produtos
  urlParams  String // {pagina: res.retorno.pagina+1 || 1, pesquisa: '', situacao: 'A', id: parent.body.id} => &pesquisa=${pesquisa}&situacao=A&pagina=${pagina}
}

model ConfigIntegrationMapper {
  id       String @id @default(uuid())
  endpoint Int
  entity   String //Product
  from     String //produto.id 
  to       String //id
}

model Product {
  id                    String    @id @default(uuid())
  name                  String
  code                  String
  price                 Decimal
  promocionalPrice      Decimal
  costPrice             Decimal
  averageCostPrice      Decimal
  unit                  String
  gtin                  String
  variationType         String
  location              String
  creationDate          DateTime?
  situation             String
  ncm                   String?
  origin                String?
  gtinPackaging         String?
  netWeight             Decimal?
  grossWeight           Decimal?
  minimumStock          Decimal?
  maximumStock          Decimal?
  //idVendor
  //productCodeVendor
  unitsPerBox           String?
  type                  String?
  IPIClass              String?
  fixedIPIValue         Decimal?
  codeListService       String?
  additionalDescription String?
  note                  String?
  guarantee             String?
  cest                  String?
  idParent              Int?
  toOrder               String?
  brand                 String?
  packagingType         Int?
  packagingHeight       Decimal?
  packagingWidth        Decimal?
  packagingLength       Decimal?
  packagingDiameter     Decimal?
  category              String?
  class                 String?
  seoTitle              String?
  seoDescription        String?
  seoKeywords           String?
  linkVideo             String?
  slug                  String?
  importedDetails       Boolean?
  datailsImportedAt     DateTime?
}

model Partner {
  id           String   @id @default(uuid())
  code         String
  name         String
  nickname     String
  type         String
  taxID        String
  street       String
  complement   String
  area         String
  zip          String
  city         String
  state        String
  email        String
  phone        String
  idPriceiList Int
  idSeller     Int
  sellerName   String
  active       String
  creationDate DateTime
}
