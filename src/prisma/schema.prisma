// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Product {
  id            String        @id @default(uuid()) @db.VarChar(50)
  name          String
  code          String
  price         Decimal
  unit          String
  variationType String
  active        String
  type          String?
  idParent      String?
  brand         String?
  category      String?
  class         String?
  slug          String?
  image         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?     @updatedAt
  ProductTag    ProductTags[]
  OrderItems    OrderItems[]
}

model TagGroup {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Tag       Tag[]
}

model Tag {
  id         String        @id @default(uuid())
  name       String
  tagGroupId String
  createdAt  DateTime      @default(now())
  updatedAt  DateTime?     @updatedAt
  tagGroup   TagGroup      @relation(fields: [tagGroupId], references: [id])
  ProductTag ProductTags[]
}

model ProductTags {
  productId String
  tagId     String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  tag       Tag       @relation(fields: [tagId], references: [id])
  product   Product   @relation(fields: [productId], references: [id])

  @@id(name: "productTagId", [productId, tagId])
}

model Order {
  id          String       @id @default(uuid())
  description String
  total       Decimal
  createdAt   DateTime     @default(now())
  updatedAt   DateTime?    @updatedAt
  OrderItems  OrderItems[]
}

model OrderItems {
  id        String    @id @default(uuid())
  orderId   String
  productId String
  amount    Decimal
  price     Decimal
  total     Decimal
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  order     Order     @relation(fields: [orderId], references: [id])
  product   Product   @relation(fields: [productId], references: [id])
}

model Partner {
  id         String    @id @default(uuid())
  code       String?
  name       String
  nickname   String
  type       String?
  taxID      String?
  email      String?
  phone      String?
  idSeller   Int?
  sellerName String?
  active     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}

model IntegrationProgress {
  id        String    @id @default(uuid()) @db.VarChar(50)
  key       String    @db.VarChar(50)
  startDate DateTime  @db.Timestamp()
  endDate   DateTime? @db.Timestamp()
  progress  Int       @db.Integer
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}
