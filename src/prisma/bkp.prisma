enum IntegrationType {
    REST
    SOAP
}

model ConfigIntegration {
    id                         String                      @id @default(uuid()) @db.Uuid
    name                       String                      @db.VarChar(100) // Tiny API2
    description                String                      @db.VarChar(500) // Tiny API2
    baseUrl                    String                      @db.VarChar(255) // https://api.tiny.com.br/api2
    token                      String                      @db.VarChar(512)
    params                     Json                        @default(dbgenerated("'{}'")) // {token: config.token, formato: 'json'} -> &token=''&formato=json
    type                       IntegrationType // REST | SOAP 
    requestPerMinute           Int                         @db.Integer
    active                     Boolean                     @db.Boolean
    //Relations
    configIntegrationEndPoints ConfigIntegrationEndpoint[]
}

model ConfigIntegrationEndpoint {
    id                       String                    @id @default(uuid()) @db.Uuid
    name                     String // Obter Produtos
    endpoint                 String // produtos.pesquisa.php
    method                   String // GET | POST | DELETE | UPDATE | PATCH
    paginated                Boolean
    parent                   Int // Se é filha de outra requisição e deve ser acionada após resposta da requisição pai (se endpoint da filha for o mesmo da pai não será feita chamada ao endpoint novamente)
    bodyFilter               String // res.retorno.produtos
    urlParams                String // {pagina: res.retorno.pagina+1 || 1, pesquisa: '', situacao: 'A', id: parent.body.id} => &pesquisa=${pesquisa}&situacao=A&pagina=${pagina}
    //Relations
    configIntegration        ConfigIntegration         @relation(fields: [configIntegrationId], references: [id])
    configIntegrationId      String                    @db.Uuid
    configIntegrationMappers ConfigIntegrationMapper[]
    configIntegrationAuth    ConfigIntegrationAuth[]
}

enum IntegrationAuthType {
    TOKEN
    OAUTH2
}

model ConfigIntegrationAuth {
    id                          String                     @id @default(uuid()) @db.Uuid
    type                        IntegrationAuthType // TOKEN | OAuth2 | etc
    ConfigIntegrationEndpoint   ConfigIntegrationEndpoint? @relation(fields: [configIntegrationEndpointId], references: [id])
    configIntegrationEndpointId String?                    @db.Uuid
}

model ConfigIntegrationMapper {
    id                          String                    @id @default(uuid()) @db.Uuid
    entity                      String //Product
    from                        String //produto.id 
    to                          String //id
    //Relations
    configIntegrationEndpoint   ConfigIntegrationEndpoint @relation(fields: [configIntegrationEndpointId], references: [id])
    configIntegrationEndpointId String                    @db.Uuid
}
